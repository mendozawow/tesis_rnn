#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{soul}
\begin{titlepage} 	
\centering 	
\includegraphics[width=0.15\textwidth]{logo_um.jpg}\par\vspace{1cm} 	
{\scshape\LARGE Universidad de Mendoza \par} 	
\vspace{1cm} 	
{\scshape\Large Facultad de Ingeniería\par} 	
{\scshape Ingeniería en Informática\par}
\vspace{1.5cm} 	
{\huge\bfseries \ul{"Redes Neuronales Recurrentes para la detección de comportamiento de Botnets"}\par}
\vspace{2cm} 	
{\Large\itshape Pablo Daniel Torres\par} 	
\vfill 	
Profesor Titular\par 	Dr. Ing.   \textsc{Carlos A. Catania}
\vfill
Asesor\par 	Dr. Ing.   \textsc{Sebastián García}
% Bottom of the page 	
{\large 2017\par} 
\end{titlepage} 
\end_preamble
\use_default_options true
\begin_modules
customHeadersFooters
figs-within-sections
tabs-within-sections
\end_modules
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 1
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language french
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Abstract
Una Botnet se puede visualizar como una red de computadoras comprometidas
 que pueden ser controladas en su conjunto por un nodo central para llevar
 a cabo acciones maliciosas coordinadas.
 La capacidad adaptativa de este tipo de amenazas ha determinado obsoletos
 los métodos tradicionales, dada su incapacidad de actualizar los métodos
 de detección al mismo ritmo con el que las Botnets implementan nuevas técnicas
 para ofuscar su actividad.
 A raíz de esta problemática, surge el análisis de comportamiento de tráfico
 de red como una manera de atacar el problema de detección de Botnets.
 El análisis de comportamiento apunta a encontrar patrones comunes de conducta
 seguidos por las Botnets a través de su ciclo de vida, tratando de generalizarl
os de tal manera de ser capaz de detectar tráfico de Botnet nunca antes
 visto.
 El presente trabajo provee un análisis sobre la capacidad de las Redes
 Neuronales Recurrentes (RNN) para clasificar el tráfico de red modelado
 previamente como un conjunto de estados que cambia en el tiempo.
 El rendimiento de la red es evaluado considerando dos problemas principales,
 el desbalanceo de tráfico de red entre flujos de tráfico normal y flujos
 de tráfico originados por una Botnet, y la secuencia mínima óptima de estados
 necesarios para una correcta clasificación.
 Ambos problemas poseen un gran impacto frente a una potencial implementación
 en el mundo real.
 La evaluación es llevada a cabo utilizando una reconocida técnica, Stratified
 K-Fold cross validation, y las pruebas de rendimiento son realizadas de
 manera independiente contra muestras nunca antes vistas en el entrenamiento,
 para medir fehacientemente la capacidad de generalización de la red.
 Los resultados preliminares muestras que la RNN es capaz de clasificar
 flujos de tráfico con una elevada tasa de detección de ataques, manteniendo
 a su vez una tasa de falsas alarmas mínima, lo que la convierte en una
 potencial candidata para implementación y despliegue en escenarios de la
 vida real.
 Sin embargo, la experimentación también revela los problemas de la red
 frente a comportamientos de tráfico de difícil diferenciación cuando el
 volumen de muestras es considerablemente bajo además de algunos casos particula
res sobre desbalanceo de tráfico de red.
\end_layout

\begin_layout Abstract
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigbreak
\end_layout

\end_inset


\end_layout

\begin_layout Abstract

\lang english
A Botnet can be viewed as a network of compromised computers that can be
 controlled as a whole by a central node to perform coordinated malicious
 actions.
 The adaptive capacity of these types of threats has rendered traditional
 methods obsolete given their inability to update detection methods at the
 same rate with which Botnets implement new techniques to overshadow their
 activity.
 As a result, the behavioral analysis of network traffic arises as a way
 to attack the Botnets detection problem.
 The behavioral analysis aims to find common patterns of behavior followed
 by Botnets throughout their life cycle, trying to generalize them in such
 a way to be able to detect Botnet traffic never seen before.
 The present paper provides an analysis of the ability of Recurrent Neural
 Networks (RNN) to classify previously modeled network traffic as a set
 of states that changes over time.
 The performance of the network is evaluated considering two main problems,
 the imbalance of network traffic between normal traffic flows and traffic
 flows originated by a Botnet, and the minimum optimal sequence of states
 necessary for a correct classification.
 Both problems have a great impact against a potential implementation in
 the real world.
 The evaluation is carried out using a recognized technique, Stratified
 K-Fold cross validation, and performance tests are performed independently
 against samples never seen before in training, to reliably measure the
 generalization capacity of the network.
 Preliminary results show that the RNN is able to classify traffic flows
 with a high rate of attack detection, while maintaining a minimum false
 alarm rate, which makes it a potential candidate for implementation and
 deployment in real life scenarios.
 However, experimentation also reveals the network problems against difficult-to
-differentiate traffic behaviors when the volume of samples is considerably
 low, in addition to some particular cases of network traffic unbalance.
\end_layout

\begin_layout Abstract
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand include
filename "introduccion/introduccion.lyx"

\end_inset


\begin_inset CommandInset include
LatexCommand include
filename "marco_teorico/marco_teorico.lyx"

\end_inset


\begin_inset CommandInset include
LatexCommand include
filename "deteccion_botnet_rnn/deteccion.lyx"

\end_inset


\begin_inset CommandInset include
LatexCommand include
filename "experimentos/experimentos.lyx"

\end_inset


\begin_inset CommandInset include
LatexCommand include
filename "conclusiones/conclusiones.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand include
filename "bibliografia.lyx"

\end_inset


\end_layout

\end_body
\end_document
