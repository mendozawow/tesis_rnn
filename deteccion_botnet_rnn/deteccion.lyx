#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\author -1874138591 "Harpo Maxx,,," 
\end_header

\begin_body

\begin_layout Section
Detección de comportamiento de botnet mediante RNN
\end_layout

\begin_layout Standard
La idea propuesta en este trabajo consiste en utilizar una red LSTM para
 construir modelos de deteccion basados en el comportamiento de las conexiones.
 La estrategia utilizada sigue el enfoque clásico de aprendizaje automático
 supervisado para construir modelos de clasificación.
 Tal enfoque se basa en el uso de datos históricos previamente etiquetados
 como Botnet o Normal para entrenar la red LSTM y finalmente obtener un
 modelo de detección capaz de reconocer y discriminar el comportamiento
 de las conexiones entre las dos posibles alternativas.
\end_layout

\begin_layout Subsection
Vectorización de las entradas
\end_layout

\begin_layout Standard
La estrategia utilizada para codificar los modelos de comportamiento
\change_inserted -1874138591 1467314401
 descriptos en la seccion XXX
\change_unchanged
 a unidades de entrada de la red LSTM consiste en transformar cada estado
 en un vector binario.
 De acuerdo a la tabla 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Estrategia-de-asignación"

\end_inset

 hay 50 posibles estados a utilizar en un modelo de comportamiento.
 Por lo tanto, esposible representar cada uno de estos símbolos en un vector
 binario 50-dimensional.
 Cada elemento en este vector representa un estado.
 Dado un estado, solo el elemento que representa a este estado estará activo
 en el vector, mientras que el resto permanecerá inactivo.
 Un ejemplo del esquema de representación se puede ver en la formula (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:binary_vector_a"

\end_inset

) para el caso del estado 
\emph on
a
\emph default
 y en la formula (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:binary_vector_b"

\end_inset

) para el caso del estado 
\emph on
b.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
a=\begin{bmatrix}1 & 0 & 0 & 0 & \cdots & 0 & 0 & 0\end{bmatrix}\label{eq:binary_vector_a}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
b=\begin{bmatrix}0 & 1 & 0 & 0 & \cdots & 0 & 0 & 0\end{bmatrix}\label{eq:binary_vector_b}
\end{equation}

\end_inset

 
\end_layout

\begin_layout Standard
La secuencia completa del modelo de comportamiento es codificada en la forma
 de una matriz (ver la formula (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:binary_matrix"

\end_inset

)) donde cada fila representa un estado del modelo.
 Además, el subíndice de la matriz indicando el número de fila es utilizado
 para garantizar la línea de tiempo correcta de cada símbolo dentro del
 modelo de comportamiento.
 Posteriormente la capa de entrada de la red es alimentada por la matriz
 una fila por vez.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\begin{bmatrix}1 & 0 & 0 & 0 & \cdots & 0 & 0 & 0\\
\vdots & \vdots & \vdots & \vdots & \ddots & \vdots & \vdots & \vdots\\
0 & 1 & 0 & 0 & \cdots & 0 & 0 & 0\\
0 & 0 & 0 & 0 & \cdots & 0 & 0 & 1
\end{bmatrix}\label{eq:binary_matrix}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
Otros detalles de implementación...(???)
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout

\change_inserted -1874138591 1467314440
TODO: 
\change_unchanged
Arquitectura de la red LSTM?
\change_inserted -1874138591 1467314457

\end_layout

\begin_layout Plain Layout

\change_inserted -1874138591 1467314470
Seccion 3.2 Hablar de la capa Oculta y su configuracion
\end_layout

\begin_layout Plain Layout

\change_inserted -1874138591 1467316084
Seccion 3.3 Hablar de la capa de salida (etiqueta convertida en ceros y unos).
 Funcion de activacion
\end_layout

\begin_layout Plain Layout

\change_inserted -1874138591 1467316093
Seccion 3.4 Otros como el tipo de entrenamiento y demas.
\change_unchanged

\end_layout

\end_inset


\end_layout

\begin_layout Standard
50 input units
\end_layout

\begin_layout Standard
1 LSTM layer with 128 hidden units
\end_layout

\begin_layout Standard
0.1 dropout layer 
\end_layout

\begin_layout Standard
sigmoid activation, 1 output unit
\end_layout

\begin_layout Standard
binary crossentropy loss function
\end_layout

\begin_layout Standard
rmsprop optimizacion function
\end_layout

\end_body
\end_document
